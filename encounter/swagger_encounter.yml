openapi: 3.0.0
info:
  title: "DDG Encounter REST Api"
  description: "An API for getting encounter information"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    Encounter:
      type: "object"
      properties:
        encounter_description:
          type: "string"
        encounter_pool:
          type: "integer"
        encounter_image:
          type: "string"
        encounter_name:
          type: "string"
        encounter_type:
          type: "integer"
        encounter_star:
          type: "integer"
        encounter_reward_code:
          type: "integer"
  
  parameters:
    encounter_id:
      name: "encounter_id"
      description: "Id of the encounter."
      in: path
      required: True
      schema:
        type: "integer"
    encounter_description:
      name: "description"
      description: "Description of how to fight encounter."
      in: path
      required: True
      schema:
        type: "string"
    encounter_pool:
      name: "encounter_pool"
      description: "A way of dividing up encounter difficulty"
      in: path
      required: True
      schema:
        type: "integer"
    encounter_image:
      name: "encounter_image"
      description: "Title of the image file for the monster"
      in: path
      required: True
      schema:
        type: "string"
    encounter_name:
      name: "encounter_name"
      description: "Name of the encounter monster"
      in: path
      required: True
      schema:
        type: "string"
    encounter_type:
      name: "encounter_type"
      description: "The type of encounter monster, room, chest."
      in: path
      required: True
      schema:
        type: "integer"
    encounter_star:
      name: "encounter_star"
      description: "The star level of the monster"
      in: path
      required: True
      schema:
        type: "integer"
    encounter_reqard_code:
      name: "encounter_reward_code"
      description: "Reqard for defeating the encounter"
      in: path
      required: True
      schema:
        type: "integer"

paths:
  /encounters:
    get:
      operationId: "encounters.read_all"
      tags:
        - "Encounters"
      summary: "Read the list of encounters"
      responses:
        "200":
          description: "Successfully read encounters list"
    post:
      operationId: "encounters.create"
      tags:
        - Encounters
      summary: "Create an encounter"
      requestBody:
          description: "Encounter to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "encounter"
                $ref: "#/components/schemas/Encounter"
      responses:
        "201":
          description: "Successfully created encounter"
  /encounters/{encounter_id}:
    get:
      operationId: "encounters.read_one"
      tags:
        - Encounters
      summary: "Read one encounter"
      parameters:
        - $ref: "#/components/parameters/encounter_id"
      responses:
        "200":
          description: "Successfully read encounter"
    put:
      tags:
        - Encounters
      operationId: "encounters.update"
      summary: "Update an encounter"
      parameters:
        - $ref: "#/components/parameters/encounter_id"
      responses:
        "200":
          description: "Successfully updated an encounter"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "encounter"
              $ref: "#/components/schemas/Encounter"
    delete:
      tags:
        - Encounters
      operationId: "encounters.delete"
      summary: "Delete an encounter"
      parameters:
        - $ref: "#/components/parameters/encounter_id"
      responses:
        "204":
          description: "Successfully deleted an encounter"
  